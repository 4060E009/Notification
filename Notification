https://github.com/MuHongWeiWei/NotificationDemo                                                                //參考網址
https://badgameshow.com/fly/android-notification%E9%80%9A%E7%9F%A5/fly/android/                                 //參考網址
https://raw.githubusercontent.com/MuHongWeiWei/NotificationDemo/master/app/src/main/res/drawable/logo.webp      //(R.drawable.logo)圖片網址

MainActivity.kt
**
package com.example.notification

import android.annotation.SuppressLint
import android.app.Notification.VISIBILITY_PUBLIC
import android.app.NotificationChannel
import android.app.NotificationManager
import android.app.PendingIntent
import android.content.Context
import android.content.Intent
import android.graphics.BitmapFactory
import android.graphics.Color
import android.media.RingtoneManager
import android.os.Build
import android.os.Bundle
import android.view.View
import androidx.annotation.RequiresApi
import androidx.appcompat.app.AppCompatActivity
import androidx.core.app.NotificationCompat
import kotlin.concurrent.thread

class MainActivity : AppCompatActivity() {

    private lateinit var notificationManager: NotificationManager

    @RequiresApi(Build.VERSION_CODES.O)
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main)

        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {
            val channel =
                NotificationChannel(packageName, "Demo", NotificationManager.IMPORTANCE_HIGH)
            notificationManager =
                getSystemService(Context.NOTIFICATION_SERVICE) as NotificationManager
            notificationManager.createNotificationChannel(channel)
        }
    }

    @SuppressLint("ResourceAsColor", "WrongConstant")
    fun normal(view: View) {
        val intent = Intent(this, SecondMainActivity::class.java)
        val pendingIntent = PendingIntent.getActivity(this, 0, intent, 0)

        val notification = NotificationCompat.Builder(this, packageName)
            .setContentTitle("通知")
            .setContentText("您有新訊息")
            .setSmallIcon(R.drawable.logo)
//            .setWhen(System.currentTimeMillis())
            .setContentIntent(pendingIntent)
            .setAutoCancel(true)
            .setStyle(
                NotificationCompat.BigPictureStyle()
                    .bigPicture(BitmapFactory.decodeResource(resources, R.drawable.icon)))  //大圖片
            .setWhen(System.currentTimeMillis())
            .build()

            notificationManager.notify((0..10000).random(), notification)

//            .setVisibility(VISIBILITY_PUBLIC)     //鎖頻上顯示通知

//            .setSound(RingtoneManager.getDefaultUri(RingtoneManager.TYPE_NOTIFICATION)) //通知音效

//            .setVibrate(longArrayOf(500, 500, 1000, 2000, 3000, 500, 500, 500)) //通知震動
//                 <uses-permission android:name="android.permission.VIBRATE" /> //(若有用到震動則需在AndroidManifest.xml加入權限)

//            .setLights(Color.RED, 1000, 1000)   //通知閃光燈效果

                //圖片下載
//            .setContentTitle("圖片下載")
//            .setContentText("下載中")
//            .setProgress(100, 0, false)
//        thread {
//            for (i in 0..100 step 5) {
//                notification.setProgress(100, i, false)
//                notificationManager.notify(0, notification.build())
//                Thread.sleep(250)
//            }
//            notification.setProgress(0, 0, false)
//                .setContentText("下載完成")
//            notificationManager.notify(0, notification.build())
//            Thread.sleep(1000)
//            notificationManager.cancel(0)
//        }
//
//        notificationManager.notify(0, notification.build())
    }
}


=====================================================================================
SecondMainActivity.kt
**
package com.example.notification

import androidx.appcompat.app.AppCompatActivity
import android.os.Bundle

class SecondMainActivity : AppCompatActivity() {
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_second_main)
    }
}
=====================================================================================
activity_main.xml
**
<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".MainActivity">

    <Button
        android:onClick="normal"
        android:id="@+id/button"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Button"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintLeft_toLeftOf="parent"
        app:layout_constraintRight_toRightOf="parent"
        app:layout_constraintTop_toTopOf="parent"/>

</androidx.constraintlayout.widget.ConstraintLayout>
=====================================================================================
activity_second_main.xml
**
<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    xmlns:app="http://schemas.android.com/apk/res-auto">

    <TextView
        android:id="@+id/textView"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="第二頁"
        android:textSize="80sp"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent" />

</androidx.constraintlayout.widget.ConstraintLayout>
=====================================================================================
